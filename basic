一：---------requests库
几个主要方法：
# 构造一个请求 支撑以下方法的基础方法
requests.requests（method, url, **kwargs）

# 获取HTTP网页的主要方法 get
requests.get(url, param=None, **kwargs)
'''
r = requests.get(url)   
返回一个response对象
r的属性：
r.status_code  请求返回状态200表成功 404失败
r.text  响应内容的字符串形式 对应url的页面内容
r.encoding  header中猜测的编码方式
r.apparent_encoding  从内容中分析出的编码方式
r.content  二进制形式
'''

# 
requests.head(url, **kwargs)

# 向HTML网页提交post请求
requests.post(url, data=None, json=None, **kwargs)

#           提交put请求
requests.put(url, data=None,**kwargs)

#           提交局部修改请求 对应HTTP的patch
requests.patch(url, data=None, **kwargs)

#           删除
requests.delete(url, **kwargs)

# 通用框架
import requests

def getHTMLText(url):
  try: # 网络连接有风险，异常处理很重要
    r = requests.get(url, timeout=30)
    r.raise_for_status() #如果状态不是200，引发HTTPError异常
    r.encoding = r.apparent_encoding
    return r.text
  except:
    return "产生异常"
    
if __name__ == "__main__":
url = "http://www.baidu.com"
print(getHTMLText(url))
